@using PolymorphicModelBinder.Html
@using System.Text.Json
@model PolymorphicAsPropertyViewModel

@{
    ViewData["Title"] = "Polymorphic as property";
}

<div class="mb-4">
    <h1>Polymorphic as property</h1>
    <p>
        This is an example implementation for a polymorphic as property.
    </p>
    <div>
        <a href="@Url.Action("Index", new { type = "Dog" })" class="btn btn-outline-primary">Switch to dog</a>
        <a href="@Url.Action("Index", new { type = "Cat" })" class="btn btn-outline-primary">Switch to cat</a>
    </div>
</div>

@if (ViewContext.HttpContext.Request.Method == "POST")
{
    var list = ViewContext.HttpContext.Request.Form.Keys
        .ToDictionary<string, string, string>(key => key, key =>  ViewContext.HttpContext.Request.Form[key]);

    var output = JsonSerializer.Serialize(list, new JsonSerializerOptions()
    {
        WriteIndented = true
    });
    
    <div class="card mb-4">
        <div class="card-header">
            Form
        </div>
        <div class="card-body">
            <pre>@output</pre>
        </div>
    </div>
}

<form asp-action="Index" method="post" id="form">
    @Html.PolymorphicTypeInValueFor(x => x.Pet)
    @Html.PolymorphicEditorFor(x => x.Pet)
    <div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>